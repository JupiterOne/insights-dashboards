{
  "prerequisites": {
    "integrations": [
      {
        "name": "aws",
        "title": "AWS"
      }
    ],
    "supportedUseCase": "Uses helpful queries for identifying resources that can result in increasing costs and attack surface within your AWS environment."
  },
  "widgets": [
    {
      "id": "be41230a-7b3f-4ca9-9d7b-2347b20c08a8",
      "title": "AWS Database Backup Cost per Account",
      "type": "pie",
      "config": {
        "queries": [
          {
            "name": "query0",
            "query": "FIND (aws_db_cluster_snapshot|aws_db_snapshot) as snapshot\n  RETURN\n    snapshot.tag.AccountName as name,\n    sum(snapshot.allocatedStorage) * 0.02 as value"
          }
        ],
        "settings": {
          "pie": {
            "decimalLimit": 2,
            "currencyFormat": "$"
          }
        }
      }
    },
    {
      "id": "a2b0fa6d-c184-4f79-b4ae-8ea99dbd72df",
      "title": "Top 10 AWS S3 Buckets Size and Cost",
      "type": "table",
      "config": {
        "queries": [
          {
            "name": "query1",
            "query": "find aws_s3_bucket with bucketSizeBytes!=undefined as bucket \nreturn \n    bucket.name as Name, \n    bucket.tag.AccountName as Account, \n    bucket.numberOfObjects as \"Number of Objects\", \n    bucket.bucketSizeBytes / 1000000000 as SizeInGB, \n    bucket.bucketSizeBytes / 1000000000 * 0.023 as \"Monthly Cost\",\n    bucket.lifecycleEnabled, bucket.retentionPeriod\norder by bucket.bucketSizeBytes DESC limit 10"
          }
        ]
      }
    },
    {
      "id": "4dbd0b65-b52d-4ecd-9ce1-385dd14de332",
      "title": "All S3 Buckets Size and Cost",
      "type": "table",
      "config": {
        "queries": [
          {
            "name": "query1",
            "query": "find aws_s3_bucket with bucketSizeBytes!=undefined as bucket \n    return \n        bucket.name as Name, \n        bucket.tag.AccountName as Account, \n        bucket.numberOfObjects as \"Number of Objects\", \n        bucket.bucketSizeBytes / 1000000000 as SizeInGB, \n        bucket.bucketSizeBytes / 1000000000 * 0.023 as \"Monthly Cost\",\n        bucket.lifecycleEnabled, bucket.retentionPeriod \n        ORDER BY bucket.bucketSizeBytes DESC"
          }
        ]
      }
    },
    {
      "id": "7ba87c37-bb0d-47d7-88dc-6a5e00fed908",
      "title": "Monthly Database Backup Cost",
      "type": "table",
      "config": {
        "queries": [
          {
            "name": "query1",
            "query": "Find (aws_db_cluster_snapshot|aws_db_snapshot) as snapshot\nReturn\n    snapshot.displayName as Name,\n    snapshot.tag.AccountName as Account,\n    snapshot.allocatedStorage as StorageInGB,\n    sum(snapshot.allocatedStorage) * 0.02 as EstimatedCost\n    ORDER BY snapshot.allocatedStorage DESC\n"
          }
        ]
      }
    },
    {
      "id": "31793db4-c1a6-44be-b215-3a6146bf53df",
      "title": "Disks not not in use",
      "type": "table",
      "config": {
        "queries": [
          {
            "name": "query1",
            "query": "Find Disk with _class!='Backup' as d\n    that !uses (Host|Configuration)\n    return\n        d.displayName as Name,\n        d.tag.AccountName as Account,\n        d.size as SizeInGB,\n        d.sizeGB as SizeInGB,\n        d.diskSizeBytes as \"Size in Bytes\",\n        d.diskSizeGb as SizeInGB\n        order by SizeInGB DESC"
          }
        ]
      }
    },
    {
      "id": "27cd218e-b689-4a93-8037-2fdf0ce21bb1",
      "title": "EBS volumes attached to inactive EC2 instances",
      "type": "table",
      "config": {
        "queries": [
          {
            "name": "query1",
            "query": "Find aws_ebs_volume as e \n    that USES aws_instance with active!=true \n    return \n        e.displayName as Name, \n        e.encrypted as Encrypted, \n        e.size as Size, \n        e.volumeType as Type"
          }
        ]
      }
    },
    {
      "id": "d35e6c8d-40a2-439b-b9db-bcff8a5361aa",
      "title": "EIPS used by an Inactive EC2 Instance",
      "type": "table",
      "config": {
        "queries": [
          {
            "name": "query1",
            "query": "find aws_eip \n    that uses aws_instance WITH active != true AND state = 'stopped'"
          },
          {
            "name": "query2",
            "query": "find aws_eip that !(uses|has) *"
          }
        ]
      }
    },
    {
      "id": "e2330d73-12bf-4994-a16a-cb0d5c306dae",
      "title": "Elastic IPs not using an ENI",
      "type": "table",
      "config": {
        "queries": [
          {
            "name": "query1",
            "query": "find aws_eip \n    that !uses aws_eni"
          }
        ]
      }
    },
    {
      "id": "4710d28f-031d-4a76-b411-5f3298ba2b1b",
      "title": "EC2 instances using more than one EIP",
      "type": "table",
      "config": {
        "queries": [
          {
            "name": "query1",
            "query": "find aws_eip \n    that uses aws_instance\n    that uses aws_eip"
          }
        ]
      }
    },
    {
      "id": "c7fa2634-a9df-4639-b14f-554292d3566f",
      "title": "",
      "type": "markdown",
      "config": {
        "queries": [],
        "settings": {
          "markdown": {
            "text": "# S3"
          }
        }
      }
    },
    {
      "id": "0455f764-2531-41db-8430-22a9aa0c45ea",
      "title": "All S3 Buckets Ordered By Size",
      "type": "table",
      "config": {
        "queries": [
          {
            "name": "query1",
            "query": "find aws_s3_bucket with bucketSizeBytes!=undefined as b \nreturn b.bucketSizeBytes / 1000000000 as SizeInGB, \nb.bucketName as \"Name\", \nb.createdOn as \"Creation Date\",  \nb.tag.AccountName as Account\nORDER BY SizeInGB DESC"
          }
        ]
      }
    },
    {
      "id": "667833dd-6493-4280-8703-dfdb1d86c06c",
      "title": "S3 Total and Average Bucket Size by Account",
      "type": "table",
      "config": {
        "queries": [
          {
            "name": "query1",
            "query": "find aws_s3_bucket with bucketSizeBytes!=undefined as b \nreturn \nb.tag.AccountName as Account, \nSUM(b.bucketSizeBytes) / 1000000000 as TotalSizeInGB, \nAVG(b.bucketSizeBytes) / 1000000000 as AverageSizeInGB ORDER BY AverageSizeInGB DESC"
          }
        ]
      }
    },
    {
      "id": "c1f8ed7c-2417-42d1-b0c9-60bbce565896",
      "title": "",
      "type": "markdown",
      "config": {
        "queries": [],
        "settings": {
          "markdown": {
            "text": "# Unused Resources"
          }
        }
      }
    },
    {
      "id": "e5edf9d8-2548-41fa-98f2-caaf443179b7",
      "title": "",
      "type": "markdown",
      "config": {
        "queries": [],
        "settings": {
          "markdown": {
            "text": "# DynamoDB"
          }
        }
      }
    },
    {
      "id": "59b00d0c-874b-4513-b8fa-04248cbe7958",
      "title": "All DynamoDB Tables Size and Cost",
      "type": "table",
      "config": {
        "queries": [
          {
            "name": "query1",
            "query": "find aws_dynamodb_table with active=true as table \nreturn table.displayName as Name, \ntable.tag.AccountName as Account,\ntable.continuousBackupEnabled,\ntable.hasBackup,\ntable.itemCount,\ntable.tableSizeBytes / 1000000000 as SizeInGB,\ntable.tableSizeBytes / 1000000000 * 0.25 as \"Monthly Cost\"\norder by SizeInGB DESC"
          }
        ]
      }
    },
    {
      "id": "7a609fec-551c-481a-873c-3291de3c9884",
      "title": "",
      "type": "markdown",
      "config": {
        "queries": [],
        "settings": {
          "markdown": {
            "text": "# Backup"
          }
        }
      }
    },
    {
      "id": "c9ad0684-efce-49b4-9c8e-f95da82fc9ab",
      "title": "DB Cluster Snapshot Usage per Account",
      "type": "table",
      "config": {
        "queries": [
          {
            "name": "query1",
            "query": "FIND aws_db_cluster_snapshot with _source!=\"system-mapper\" and allocatedStorage!=undefined as b \n  return b.tag.AccountName as Account, \n    SUM(b.allocatedStorage) as TotalSizeInGB, \n    AVG(b.allocatedStorage) as AverageSizeInGB, \n    MAX(b.allocatedStorage) as LargestSnapshotInGB,\n    COUNT(b) as TotalSnapshots ORDER BY AverageSizeInGB DESC"
          }
        ]
      }
    },
    {
      "id": "13e5dd75-da18-4d79-98e0-614060dd0ba0",
      "title": "EBS Volume Usage per Account",
      "type": "table",
      "config": {
        "queries": [
          {
            "name": "query1",
            "query": "FIND aws_ebs_volume with size!=undefined as b \n  return b.tag.AccountName as Account, \n    SUM(b.size) as TotalSize, \n    AVG(b.size) as AverageSize, \n    MAX(b.size) as LargestVolume,\n    COUNT(b) as TotalVolume ORDER BY AverageSize DESC"
          }
        ]
      }
    },
    {
      "id": "e307efb6-e074-4cb8-aabd-37f4e3375768",
      "title": "EBS Snapshot Usage Per Account",
      "type": "table",
      "config": {
        "queries": [
          {
            "name": "query1",
            "query": "FIND aws_ebs_snapshot with volumeSize!=undefined as b \n  return b.tag.AccountName as Account, \n    SUM(b.volumeSize) as TotalSize, \n    AVG(b.volumeSize) as AverageSize, \n    MAX(b.volumeSize) as LargestSnapshot,\n    COUNT(b) as TotalSnapshots ORDER BY AverageSize DESC"
          }
        ]
      }
    },
    {
      "id": "43c0b292-d100-4fa7-861b-1e5d37ccae85",
      "title": "EC2 Usage Across Organization by Type",
      "type": "table",
      "config": {
        "queries": [
          {
            "name": "query1",
            "query": "find aws_instance with instanceType!=undefined as a \n    return a.instanceType as Type, \n    count(a) as Total,\n    a.tag.AccountName as AccountName,\n    a.accountId as AccountID\n    \n"
          }
        ]
      }
    },
    {
      "id": "52242389-0d68-4c2a-a742-556dd230df14",
      "title": "Inactive Instances (during the past 60 days)",
      "type": "table",
      "config": {
        "queries": [
          {
            "name": "query1",
            "query": "find Host with active = false and stateChangedOn < date.now - 60 day as h\n    return h.displayName as Name,\n    h.accountId as AccountId,\n    h.tag.AccountName as Account,\n    h.hibernationOptionsConfigured,\n    h.instanceType as Type,\n    h.public,\n    h.stateChangedOn"
          }
        ]
      }
    },
    {
      "id": "9ea34d9e-031e-4030-be9a-6b53daf10087",
      "title": "",
      "type": "markdown",
      "config": {
        "queries": [],
        "settings": {
          "markdown": {
            "text": "# Elastic IPs"
          }
        }
      }
    },
    {
      "id": "a33820d7-7cd4-405c-ab90-8893944dd209",
      "title": "EIPs Not Currently Utilized",
      "type": "table",
      "config": {
        "queries": [
          {
            "name": "query1",
            "query": "Find aws_eip that !(USES|HAS) *"
          }
        ]
      }
    },
    {
      "id": "8c460d34-296a-4c31-83db-db9dc312f712",
      "title": "",
      "type": "markdown",
      "config": {
        "queries": [],
        "settings": {
          "markdown": {
            "text": "# Account and Services Evaluation"
          }
        }
      }
    },
    {
      "id": "7ac4cad0-a8dd-49c5-bc2b-a59c5933d094",
      "title": "AWS Regions in Use across Accounts",
      "type": "table",
      "config": {
        "queries": [
          {
            "name": "query1",
            "query": "Find UNIQUE * with _integrationType=\"aws\" and region!=undefined as a\n    RETURN a.region as AWSRegion, count(a.accountId) as NumberOfAccounts"
          }
        ]
      }
    },
    {
      "id": "150dd562-5f1f-45f5-ab30-ee77590afe1e",
      "title": "Inactive External Identities",
      "type": "table",
      "config": {
        "queries": [
          {
            "name": "query1",
            "query": "Find AccessRole with lastUsedOn < date.now-15 day as Role \n    THAT TRUSTS * with _source=\"system-mapper\" as ext\n    RETURN ext.displayName as \"External Identity\", Role.tag.AccountName as Account, Role.accountId as AccountId, Role.displayName as \"Role Name\", Role._key, Role.lastUsedOn"
          }
        ]
      }
    }
  ],
  "layouts": {
    "sm": [
      {
        "x": 0,
        "h": 2,
        "i": "be41230a-7b3f-4ca9-9d7b-2347b20c08a8",
        "y": 1000000000000,
        "w": 2
      },
      {
        "x": 0,
        "h": 2,
        "i": "a2b0fa6d-c184-4f79-b4ae-8ea99dbd72df",
        "y": 1000000000000,
        "w": 2
      }
    ],
    "xs": [],
    "lg": [
      {
        "static": false,
        "w": 5,
        "moved": false,
        "h": 2,
        "x": 0,
        "y": 11,
        "i": "be41230a-7b3f-4ca9-9d7b-2347b20c08a8"
      },
      {
        "static": false,
        "w": 6,
        "moved": false,
        "h": 2,
        "x": 0,
        "y": 1,
        "i": "a2b0fa6d-c184-4f79-b4ae-8ea99dbd72df"
      },
      {
        "static": false,
        "w": 6,
        "moved": false,
        "h": 2,
        "x": 6,
        "y": 1,
        "i": "4dbd0b65-b52d-4ecd-9ce1-385dd14de332"
      },
      {
        "static": false,
        "w": 7,
        "moved": false,
        "h": 2,
        "x": 5,
        "y": 11,
        "i": "7ba87c37-bb0d-47d7-88dc-6a5e00fed908"
      },
      {
        "static": false,
        "w": 6,
        "moved": false,
        "h": 2,
        "x": 0,
        "y": 14,
        "i": "31793db4-c1a6-44be-b215-3a6146bf53df"
      },
      {
        "static": false,
        "w": 6,
        "moved": false,
        "h": 2,
        "x": 6,
        "y": 18,
        "i": "27cd218e-b689-4a93-8037-2fdf0ce21bb1"
      },
      {
        "static": false,
        "w": 6,
        "moved": false,
        "h": 2,
        "x": 6,
        "y": 21,
        "i": "d35e6c8d-40a2-439b-b9db-bcff8a5361aa"
      },
      {
        "static": false,
        "w": 6,
        "moved": false,
        "h": 2,
        "x": 0,
        "y": 23,
        "i": "e2330d73-12bf-4994-a16a-cb0d5c306dae"
      },
      {
        "static": false,
        "w": 6,
        "moved": false,
        "h": 2,
        "x": 6,
        "y": 23,
        "i": "4710d28f-031d-4a76-b411-5f3298ba2b1b"
      },
      {
        "static": false,
        "w": 12,
        "moved": false,
        "h": 1,
        "x": 0,
        "y": 0,
        "i": "c7fa2634-a9df-4639-b14f-554292d3566f"
      },
      {
        "static": false,
        "w": 6,
        "moved": false,
        "h": 2,
        "x": 0,
        "y": 3,
        "i": "0455f764-2531-41db-8430-22a9aa0c45ea"
      },
      {
        "static": false,
        "w": 6,
        "moved": false,
        "h": 2,
        "x": 6,
        "y": 3,
        "i": "667833dd-6493-4280-8703-dfdb1d86c06c"
      },
      {
        "static": false,
        "w": 12,
        "moved": false,
        "h": 1,
        "x": 0,
        "y": 13,
        "i": "c1f8ed7c-2417-42d1-b0c9-60bbce565896"
      },
      {
        "static": false,
        "w": 12,
        "moved": false,
        "h": 1,
        "x": 0,
        "y": 5,
        "i": "e5edf9d8-2548-41fa-98f2-caaf443179b7"
      },
      {
        "static": false,
        "w": 12,
        "moved": false,
        "h": 2,
        "x": 0,
        "y": 6,
        "i": "59b00d0c-874b-4513-b8fa-04248cbe7958"
      },
      {
        "static": false,
        "w": 12,
        "moved": false,
        "h": 1,
        "x": 0,
        "y": 8,
        "i": "7a609fec-551c-481a-873c-3291de3c9884"
      },
      {
        "static": false,
        "w": 12,
        "moved": false,
        "h": 2,
        "x": 0,
        "y": 9,
        "i": "c9ad0684-efce-49b4-9c8e-f95da82fc9ab"
      },
      {
        "static": false,
        "w": 6,
        "moved": false,
        "h": 2,
        "x": 6,
        "y": 14,
        "i": "13e5dd75-da18-4d79-98e0-614060dd0ba0"
      },
      {
        "static": false,
        "w": 6,
        "moved": false,
        "h": 2,
        "x": 0,
        "y": 16,
        "i": "e307efb6-e074-4cb8-aabd-37f4e3375768"
      },
      {
        "static": false,
        "w": 6,
        "moved": false,
        "h": 2,
        "x": 6,
        "y": 16,
        "i": "43c0b292-d100-4fa7-861b-1e5d37ccae85"
      },
      {
        "static": false,
        "w": 6,
        "moved": false,
        "h": 2,
        "x": 0,
        "y": 18,
        "i": "52242389-0d68-4c2a-a742-556dd230df14"
      },
      {
        "static": false,
        "w": 12,
        "moved": false,
        "h": 1,
        "x": 0,
        "y": 20,
        "i": "9ea34d9e-031e-4030-be9a-6b53daf10087"
      },
      {
        "static": false,
        "w": 6,
        "moved": false,
        "h": 2,
        "x": 0,
        "y": 21,
        "i": "a33820d7-7cd4-405c-ab90-8893944dd209"
      },
      {
        "static": false,
        "w": 12,
        "moved": false,
        "h": 1,
        "x": 0,
        "y": 25,
        "i": "8c460d34-296a-4c31-83db-db9dc312f712"
      },
      {
        "static": false,
        "w": 4,
        "moved": false,
        "h": 2,
        "x": 4,
        "y": 28,
        "i": "7ac4cad0-a8dd-49c5-bc2b-a59c5933d094"
      },
      {
        "static": false,
        "w": 12,
        "moved": false,
        "h": 2,
        "x": 0,
        "y": 26,
        "i": "150dd562-5f1f-45f5-ab30-ee77590afe1e"
      }
    ],
    "xl": [],
    "md": []
  }
}
